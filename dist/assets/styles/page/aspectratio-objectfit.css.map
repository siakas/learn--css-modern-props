{"version":3,"sources":["page/aspectratio-objectfit.css","global/vars/_font.scss","global/vars/_easing.scss","global/function/_palette.scss","global/function/_strip-unit.scss","global/function/_rem.scss","page/aspectratio-objectfit.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACAhB,yDAAA;AAMU,sFAAA;ACNV;;EAAA,ECEA;;;+CAAA;ACCA;;;+CAAA;ACCA;;;+CAAA;ACDE;EACE,aAAA;EACA,SAAA;ANeJ;AMbI;EACE,OAAA;ANeN;AMZI;EACE,gBAAA;ANcN;AMZM;EACE,cAAA;EACA,mBAAA;EACA,2BAAA;EACA,sBAAA;ANcR;AMVI;EACE,iBAAA;ANYN;AMVM;EACE,mBAAA;EACA,iBAAA;ANYR;AMPE;EACE,aAAA;EACA,SAAA;ANSJ;AMPI;EACE,OAAA;ANSN;AMLM;EACE,kBAAA;EACA,oBAAA;KAAA,iBAAA;ANOR;AMHI;EACE,iBAAA;ANKN;AMHM;EACE,mBAAA;EACA,iBAAA;ANKR;AMAE;EACE,aAAA;EACA,QAAA;ANEJ;AMAI;EACE,OAAA;ANEN;AMEM;EACE,oBAAA;KAAA,iBAAA;ANAR;AMEQ;EACE,kBAAA;ANAV;AMGQ;EACE,iBAAA;ANDV;AMIQ;EACE,iBAAA;ANFV;AMKQ;EACE,qBAAA;ANHV;AMMQ;EACE,qBAAA;ANJV;AMSI;EACE,iBAAA;ANPN;AMSM;EACE,mBAAA;EACA,iBAAA;ANPR;AMSQ;EACE,oBAAA;ANPV","file":"page/aspectratio-objectfit.css","sourcesContent":["@charset \"UTF-8\";\n/* stylelint-disable no-invalid-position-at-import-rule */\n@import \"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap\";\n/**\n * 参考：matthewlein.com/ceaser/\n */ /**\n * マップ管理のパレットから色を出力（初期値は default）\n * color: palette('red', 'light'); のように指定\n--------------------------------------------- */\n/**\n * 単位を除去して数値のみを取り出す\n * 参照: https://css-tricks.com/snippets/sass/strip-unit-function/\n--------------------------------------------- */\n/**\n * 指定したピクセル指定のフォントサイズを rem 単位に変換する\n * 引数への単位の有無は関数側でトリムしているので、rem(16) でも rem(16px) でもどちらでも可\n--------------------------------------------- */\n:is(.sample-object) .card-sample1 {\n  display: flex;\n  gap: 16px;\n}\n:is(.sample-object) .card-sample1 .item {\n  flex: 1;\n}\n:is(.sample-object) .card-sample1 .image {\n  overflow: hidden;\n}\n:is(.sample-object) .card-sample1 .image span {\n  display: block;\n  padding-top: 56.25%;\n  background-position: center;\n  background-size: cover;\n}\n:is(.sample-object) .card-sample1 .text {\n  margin: 0.6em 0 0;\n}\n:is(.sample-object) .card-sample1 .text p {\n  font-size: 0.875rem;\n  line-height: 1.45;\n}\n:is(.sample-object) .card-sample2 {\n  display: flex;\n  gap: 16px;\n}\n:is(.sample-object) .card-sample2 .item {\n  flex: 1;\n}\n:is(.sample-object) .card-sample2 .image img {\n  aspect-ratio: 16/9;\n  object-fit: cover;\n}\n:is(.sample-object) .card-sample2 .text {\n  margin: 0.6em 0 0;\n}\n:is(.sample-object) .card-sample2 .text p {\n  font-size: 0.875rem;\n  line-height: 1.45;\n}\n:is(.sample-object) .card-sample3 {\n  display: flex;\n  gap: 8px;\n}\n:is(.sample-object) .card-sample3 .item {\n  flex: 1;\n}\n:is(.sample-object) .card-sample3 .image img {\n  object-fit: cover;\n}\n:is(.sample-object) .card-sample3 .image img.aspect1 {\n  aspect-ratio: 16/9;\n}\n:is(.sample-object) .card-sample3 .image img.aspect2 {\n  aspect-ratio: 4/3;\n}\n:is(.sample-object) .card-sample3 .image img.aspect3 {\n  aspect-ratio: 3/2;\n}\n:is(.sample-object) .card-sample3 .image img.aspect4 {\n  aspect-ratio: 1.618/1;\n}\n:is(.sample-object) .card-sample3 .image img.aspect5 {\n  aspect-ratio: 1.414/1;\n}\n:is(.sample-object) .card-sample3 .text {\n  margin: 0.6em 0 0;\n}\n:is(.sample-object) .card-sample3 .text p {\n  font-size: 0.875rem;\n  line-height: 1.45;\n}\n:is(.sample-object) .card-sample3 .text p span {\n  font-size: 0.6875rem;\n}","/* stylelint-disable no-invalid-position-at-import-rule */\n$use-open-sans: true;\n$use-noto-sans: false;\n$use-noto-serif: false;\n\n@if $use-open-sans {\n  @import \"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap\"; // font-family: 'Open Sans', sans-serif;\n}\n\n@if $use-noto-sans {\n  // @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap'); // font-family: 'Noto Sans JP', sans-serif;\n  @import \"https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap\";\n}\n\n@if $use-noto-serif {\n  @import \"https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@400;700&display=swap\"; // font-family: 'Noto Serif JP', serif;\n}\n","/**\n * 参考：matthewlein.com/ceaser/\n */\n$linear: cubic-bezier(0.25, 0.25, 0.75, 0.75) !default;\n$ease: cubic-bezier(0.25, 0.1, 0.25, 1) !default;\n$ease-in: cubic-bezier(0.42, 0, 1, 1) !default;\n$ease-out: cubic-bezier(0, 0, 0.58, 1) !default;\n$ease-in-out: cubic-bezier(0.42, 0, 0.58, 1) !default;\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53) !default;\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94) !default;\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955) !default;\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19) !default;\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1) !default;\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1) !default;\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22) !default;\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1) !default;\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1) !default;\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06) !default;\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1) !default;\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1) !default;\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715) !default;\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1) !default;\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95) !default;\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035) !default;\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1) !default;\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1) !default;\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335) !default;\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1) !default;\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86) !default;\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045) !default;\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275) !default;\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55) !default;\n","@use \"global/vars\" as v;\n\n/**\n * マップ管理のパレットから色を出力（初期値は default）\n * color: palette('red', 'light'); のように指定\n--------------------------------------------- */\n@function palette($palette-group, $palette-type: \"default\") {\n  @return map-get(map-get(v.$color, $palette-group), $palette-type);\n}\n","@use \"global/vars\" as v;\n@use \"sass:math\";\n\n/**\n * 単位を除去して数値のみを取り出す\n * 参照: https://css-tricks.com/snippets/sass/strip-unit-function/\n--------------------------------------------- */\n@function strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return math.div($number, $number * 0 + 1);\n  }\n  @return $number;\n}\n","@use \"global/vars\" as v;\n@use \"global/function/strip-unit\" as f;\n@use \"sass:math\";\n\n/**\n * 指定したピクセル指定のフォントサイズを rem 単位に変換する\n * 引数への単位の有無は関数側でトリムしているので、rem(16) でも rem(16px) でもどちらでも可\n--------------------------------------------- */\n@function rem($pixel) {\n  $pixel: f.strip-unit($pixel);\n  @return math.div($pixel, 16) * 1rem;\n}\n","@use \"global\" as g;\n\n:is(.sample-object) {\n  .card-sample1 {\n    display: flex;\n    gap: 16px;\n\n    .item {\n      flex: 1;\n    }\n\n    .image {\n      overflow: hidden;\n\n      span {\n        display: block;\n        padding-top: 56.25%;\n        background-position: center;\n        background-size: cover;\n      }\n    }\n\n    .text {\n      margin: 0.6em 0 0;\n\n      p {\n        font-size: g.rem(14);\n        line-height: 1.45;\n      }\n    }\n  }\n\n  .card-sample2 {\n    display: flex;\n    gap: 16px;\n\n    .item {\n      flex: 1;\n    }\n\n    .image {\n      img {\n        aspect-ratio: 16 / 9;\n        object-fit: cover;\n      }\n    }\n\n    .text {\n      margin: 0.6em 0 0;\n\n      p {\n        font-size: g.rem(14);\n        line-height: 1.45;\n      }\n    }\n  }\n\n  .card-sample3 {\n    display: flex;\n    gap: 8px;\n\n    .item {\n      flex: 1;\n    }\n\n    .image {\n      img {\n        object-fit: cover;\n\n        &.aspect1 {\n          aspect-ratio: 16 / 9;\n        }\n\n        &.aspect2 {\n          aspect-ratio: 4 / 3;\n        }\n\n        &.aspect3 {\n          aspect-ratio: 3 / 2;\n        }\n\n        &.aspect4 {\n          aspect-ratio: 1.618 / 1;\n        }\n\n        &.aspect5 {\n          aspect-ratio: 1.414 / 1;\n        }\n      }\n    }\n\n    .text {\n      margin: 0.6em 0 0;\n\n      p {\n        font-size: g.rem(14);\n        line-height: 1.45;\n\n        span {\n          font-size: g.rem(11);\n        }\n      }\n    }\n  }\n}\n"]}